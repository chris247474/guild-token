/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface MinterInterface extends ethers.utils.Interface {
  functions: {
    "_financialContractAddress()": FunctionFragment;
    "depositByCollateralAddress(uint256,uint256,address)": FunctionFragment;
    "getTotalCollateralByCollateralAddress(address)": FunctionFragment;
    "getUserCollateralByCollateralAddress(address,address)": FunctionFragment;
    "owner()": FunctionFragment;
    "redeemByCollateralAddress(uint256,uint256,address)": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "rewardsContract()": FunctionFragment;
    "setPhmContract(address)": FunctionFragment;
    "setRewardsContract(address)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_financialContractAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "depositByCollateralAddress",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getTotalCollateralByCollateralAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserCollateralByCollateralAddress",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "redeemByCollateralAddress",
    values: [BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "rewardsContract",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setPhmContract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setRewardsContract",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "_financialContractAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositByCollateralAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTotalCollateralByCollateralAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserCollateralByCollateralAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "redeemByCollateralAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rewardsContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPhmContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRewardsContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class Minter extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: MinterInterface;

  functions: {
    _financialContractAddress(overrides?: CallOverrides): Promise<[string]>;

    "_financialContractAddress()"(overrides?: CallOverrides): Promise<[string]>;

    depositByCollateralAddress(
      _collateralAmount: BigNumberish,
      _numTokens: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "depositByCollateralAddress(uint256,uint256,address)"(
      _collateralAmount: BigNumberish,
      _numTokens: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getTotalCollateralByCollateralAddress(
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getTotalCollateralByCollateralAddress(address)"(
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getUserCollateralByCollateralAddress(
      _user: string,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "getUserCollateralByCollateralAddress(address,address)"(
      _user: string,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    redeemByCollateralAddress(
      _collateralAmount: BigNumberish,
      _tokenAmount: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "redeemByCollateralAddress(uint256,uint256,address)"(
      _collateralAmount: BigNumberish,
      _tokenAmount: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    rewardsContract(overrides?: CallOverrides): Promise<[string]>;

    "rewardsContract()"(overrides?: CallOverrides): Promise<[string]>;

    setPhmContract(
      _phmAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setPhmContract(address)"(
      _phmAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setRewardsContract(
      _rewardsContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setRewardsContract(address)"(
      _rewardsContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  _financialContractAddress(overrides?: CallOverrides): Promise<string>;

  "_financialContractAddress()"(overrides?: CallOverrides): Promise<string>;

  depositByCollateralAddress(
    _collateralAmount: BigNumberish,
    _numTokens: BigNumberish,
    _collateralAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "depositByCollateralAddress(uint256,uint256,address)"(
    _collateralAmount: BigNumberish,
    _numTokens: BigNumberish,
    _collateralAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getTotalCollateralByCollateralAddress(
    _collateralAddress: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTotalCollateralByCollateralAddress(address)"(
    _collateralAddress: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUserCollateralByCollateralAddress(
    _user: string,
    _collateralAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "getUserCollateralByCollateralAddress(address,address)"(
    _user: string,
    _collateralAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  redeemByCollateralAddress(
    _collateralAmount: BigNumberish,
    _tokenAmount: BigNumberish,
    _collateralAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "redeemByCollateralAddress(uint256,uint256,address)"(
    _collateralAmount: BigNumberish,
    _tokenAmount: BigNumberish,
    _collateralAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "renounceOwnership()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  rewardsContract(overrides?: CallOverrides): Promise<string>;

  "rewardsContract()"(overrides?: CallOverrides): Promise<string>;

  setPhmContract(
    _phmAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setPhmContract(address)"(
    _phmAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setRewardsContract(
    _rewardsContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setRewardsContract(address)"(
    _rewardsContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    _financialContractAddress(overrides?: CallOverrides): Promise<string>;

    "_financialContractAddress()"(overrides?: CallOverrides): Promise<string>;

    depositByCollateralAddress(
      _collateralAmount: BigNumberish,
      _numTokens: BigNumberish,
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "depositByCollateralAddress(uint256,uint256,address)"(
      _collateralAmount: BigNumberish,
      _numTokens: BigNumberish,
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getTotalCollateralByCollateralAddress(
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalCollateralByCollateralAddress(address)"(
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserCollateralByCollateralAddress(
      _user: string,
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserCollateralByCollateralAddress(address,address)"(
      _user: string,
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    redeemByCollateralAddress(
      _collateralAmount: BigNumberish,
      _tokenAmount: BigNumberish,
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeemByCollateralAddress(uint256,uint256,address)"(
      _collateralAmount: BigNumberish,
      _tokenAmount: BigNumberish,
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    rewardsContract(overrides?: CallOverrides): Promise<string>;

    "rewardsContract()"(overrides?: CallOverrides): Promise<string>;

    setPhmContract(
      _phmAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPhmContract(address)"(
      _phmAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setRewardsContract(
      _rewardsContract: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setRewardsContract(address)"(
      _rewardsContract: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;
  };

  estimateGas: {
    _financialContractAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "_financialContractAddress()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    depositByCollateralAddress(
      _collateralAmount: BigNumberish,
      _numTokens: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "depositByCollateralAddress(uint256,uint256,address)"(
      _collateralAmount: BigNumberish,
      _numTokens: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getTotalCollateralByCollateralAddress(
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTotalCollateralByCollateralAddress(address)"(
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserCollateralByCollateralAddress(
      _user: string,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "getUserCollateralByCollateralAddress(address,address)"(
      _user: string,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    redeemByCollateralAddress(
      _collateralAmount: BigNumberish,
      _tokenAmount: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "redeemByCollateralAddress(uint256,uint256,address)"(
      _collateralAmount: BigNumberish,
      _tokenAmount: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    rewardsContract(overrides?: CallOverrides): Promise<BigNumber>;

    "rewardsContract()"(overrides?: CallOverrides): Promise<BigNumber>;

    setPhmContract(
      _phmAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setPhmContract(address)"(
      _phmAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setRewardsContract(
      _rewardsContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setRewardsContract(address)"(
      _rewardsContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _financialContractAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_financialContractAddress()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    depositByCollateralAddress(
      _collateralAmount: BigNumberish,
      _numTokens: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "depositByCollateralAddress(uint256,uint256,address)"(
      _collateralAmount: BigNumberish,
      _numTokens: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getTotalCollateralByCollateralAddress(
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTotalCollateralByCollateralAddress(address)"(
      _collateralAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserCollateralByCollateralAddress(
      _user: string,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "getUserCollateralByCollateralAddress(address,address)"(
      _user: string,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    redeemByCollateralAddress(
      _collateralAmount: BigNumberish,
      _tokenAmount: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "redeemByCollateralAddress(uint256,uint256,address)"(
      _collateralAmount: BigNumberish,
      _tokenAmount: BigNumberish,
      _collateralAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "renounceOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    rewardsContract(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "rewardsContract()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setPhmContract(
      _phmAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setPhmContract(address)"(
      _phmAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setRewardsContract(
      _rewardsContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setRewardsContract(address)"(
      _rewardsContract: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
