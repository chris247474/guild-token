/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { PotOfGoldExploitMock } from "../PotOfGoldExploitMock";

export class PotOfGoldExploitMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _potOfGold: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PotOfGoldExploitMock> {
    return super.deploy(
      _potOfGold,
      overrides || {}
    ) as Promise<PotOfGoldExploitMock>;
  }
  getDeployTransaction(
    _potOfGold: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_potOfGold, overrides || {});
  }
  attach(address: string): PotOfGoldExploitMock {
    return super.attach(address) as PotOfGoldExploitMock;
  }
  connect(signer: Signer): PotOfGoldExploitMock__factory {
    return super.connect(signer) as PotOfGoldExploitMock__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PotOfGoldExploitMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PotOfGoldExploitMock;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_potOfGold",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minRNBWAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "convert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "token",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "minRNBWAmount",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "convertMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "potOfGold",
    outputs: [
      {
        internalType: "contract PotOfGold",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161045d38038061045d8339818101604052602081101561003357600080fd5b81019080805190602001909291905050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505060805160601c6103ba6100a3600039806101ac5280610262528061028652506103ba6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636310c7221461004657806375e770191461009e5780638bbe1b1e146100d2575b600080fd5b61009c6004803603606081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506101aa565b005b6100a6610260565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a8600480360360608110156100e857600080fd5b810190808035906020019064010000000081111561010557600080fd5b82018360208201111561011757600080fd5b8035906020019184602083028401116401000000008311171561013957600080fd5b90919293919293908035906020019064010000000081111561015a57600080fd5b82018360208201111561016c57600080fd5b8035906020019184602083028401116401000000008311171561018e57600080fd5b909192939192939080359060200190929190505050610284565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636310c7228484846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019350505050600060405180830381600087803b15801561024357600080fd5b505af1158015610257573d6000803e3d6000fd5b50505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638bbe1b1e86868686866040518663ffffffff1660e01b81526004018080602001806020018481526020018381038352888882818152602001925060200280828437600081840152601f19601f8201169050808301925050508381038252868682818152602001925060200280828437600081840152601f19601f820116905080830192505050975050505050505050600060405180830381600087803b15801561036557600080fd5b505af1158015610379573d6000803e3d6000fd5b50505050505050505056fea2646970667358221220877d6d625c5a84bddb17826379dba524a3f89d155d29f426bd8f83ec7932e46664736f6c634300060c0033";
