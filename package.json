{
  "name": "hardhat-project",
  "scripts": {
    "test": "npx hardhat --network localhost test ",
    "deploy-verify:mainnet": "npx hardhat run scripts/deployVerifyAllMainnet.ts --network \"mainnet\"",
    "deploy:hardhat": "npx hardhat run scripts/deployAllLocal.ts",
    "deploy:local": "npx hardhat run scripts/deployAllLocal.ts --network \"localhost\"",
    "deployAll:kovan": "npx hardhat run scripts/deployAllKovan.ts --network \"kovan\"",
    "deploy-verify:kovan": "npx hardhat run scripts/deployVerifyAllKovan.ts --network \"kovan\"",
    "about:deploy:rnbw": "echo 'deploys only rnbw governance token to network of choice. Sample usage: yarn/npm run deploy:rnbw --network [kovan | mainnet | etc]'",
    "deploy:rnbw": "npx hardhat run scripts/deployHalo.ts",
    "deploy:guild": "npx hardhat run scripts/deployGuild.ts",
    "about:deploy:vesting": "echo 'deploys only xrnbw token to network of choice. Sample usage: yarn/npm run deploy:vesting --network [kovan | mainnet | etc]'",
    "deploy:vesting": "npx hardhat run scripts/deployVesting.ts",
    "about:deploy:lpop": "echo 'deploys only lpop governance token to network of choice. Sample usage: yarn/npm run deploy:lpop --network [kovan | mainnet | etc]'",
    "deploy:lpop": "npx hardhat run scripts/deployLPOP.ts",
    "about:deploy:xlpop": "echo 'deploys only xlpop token to network of choice. Sample usage: yarn/npm run deploy:xlpop --network [kovan | mainnet | etc]'",
    "deploy:xlpop": "npx hardhat run scripts/deployXLPOP.ts",
    "about:verify": "echo 'verifies a predeployed unverified contract. sample usage: yarn/npm run verify -- --network mainnet [DEPLOYED_CONTRACT_ADDRESS] [CTOR ARG 1] [CTOR ARG 2] [CTOR ARG N]'",
    "verify": "npx hardhat verify",
    "mint:halo-kovan": "npx hardhat run scripts/deployHalo.ts --network \"kovan\"",
    "deploy:onlyrewards-kovan": "npx hardhat run scripts/deployAmmRewards.ts --network \"kovan\"",
    "deploy:bscTestnet": "npx hardhat run scripts/deployAllBscTestnet.ts --network \"bscTestnet\"",
    "deploy-verify:bscTestnet": "npx hardhat run scripts/deployVerifyAllBscTestnet.ts --network \"bscTestnet\"",
    "deploy:matic": "npx hardhat run scripts/deployAllMatic.ts ",
    "deploy:moonbase": "npx hardhat run scripts/deployAllMoonbase.ts --network \"moonbase\"",
    "about:recompile": "echo 'Sometimes verification doesn't work off the bat and needs a recompile'",
    "recompile": "rm -rf artifacts && rm -rf cache && npx hardhat compile",
    "call:triggerEpochRewards-maticTestnet": "npx hardhat run scripts/contractCalls/triggerEpochRewards.ts --network \"maticTestnet\"",
    "call:updateAMMPoolRewards-maticTestnet": "npx hardhat run scripts/contractCalls/updateAMMPoolRewards.ts --network \"maticTestnet\"",
    "node": "npx hardhat node"
  },
  "devDependencies": {
    "@nomiclabs/hardhat-ethers": "^2.0.1",
    "@nomiclabs/hardhat-etherscan": "^2.1.2",
    "@nomiclabs/hardhat-waffle": "^2.0.1",
    "@openzeppelin/test-helpers": "^0.5.10",
    "@types/chai": "^4.2.16",
    "chai": "^4.3.3",
    "chalk": "^4.1.1",
    "ethereum-waffle": "^3.3.0",
    "ethers": "^5.0.31",
    "hardhat": "^2.1.2",
    "ora": "^5.4.0",
    "solidity-coverage": "^0.7.16"
  },
  "dependencies": {
    "@openzeppelin/contracts": "^3.4.1",
    "@typechain/ethers-v5": "^6.0.4",
    "@types/mocha": "^8.2.2",
    "@types/node": "^14.14.37",
    "chai-bignumber": "^3.0.0",
    "dotenv": "^8.2.0",
    "hardhat-gas-reporter": "^1.0.4",
    "hardhat-typechain": "^0.3.5",
    "ts-generator": "^0.1.1",
    "ts-node": "^9.1.1",
    "typechain": "^4.0.3",
    "typescript": "^4.2.4"
  }
}
